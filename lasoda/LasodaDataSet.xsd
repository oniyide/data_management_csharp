<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LasodaDataSet" targetNamespace="http://tempuri.org/LasodaDataSet.xsd" xmlns:mstns="http://tempuri.org/LasodaDataSet.xsd" xmlns="http://tempuri.org/LasodaDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Setting" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Setting (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.lasoda.Properties.Settings.GlobalReference.Default.Setting" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AffectedBodyPartTableAdapter" GeneratorDataComponentClassName="AffectedBodyPartTableAdapter" Name="AffectedBodyPart" UserDataComponentName="AffectedBodyPartTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.AffectedBodyPart" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[AffectedBodyPart] WHERE (([bodypartId] = @Original_bodypartId) AND ([description] = @Original_description))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bodypartId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bodypartId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[AffectedBodyPart] ([description]) VALUES (@description);
SELECT bodypartId, description FROM AffectedBodyPart WHERE (bodypartId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT bodypartId, description FROM dbo.AffectedBodyPart</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[AffectedBodyPart] SET [description] = @description WHERE (([bodypartId] = @Original_bodypartId) AND ([description] = @Original_description));
SELECT bodypartId, description FROM AffectedBodyPart WHERE (bodypartId = @bodypartId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_bodypartId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bodypartId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="bodypartId" ColumnName="bodypartId" DataSourceName="Lasoda.dbo.AffectedBodyPart" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@bodypartId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="bodypartId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="bodypartId" DataSetColumn="bodypartId" />
              <Mapping SourceColumn="description" DataSetColumn="description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisabilityCauseTableAdapter" GeneratorDataComponentClassName="DisabilityCauseTableAdapter" Name="DisabilityCause" UserDataComponentName="DisabilityCauseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.DisabilityCause" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DisabilityCause] WHERE (([disabilityCauseId] = @Original_disabilityCauseId) AND ([disabilityCauseName] = @Original_disabilityCauseName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disabilityCauseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disabilityCauseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_disabilityCauseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityCauseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DisabilityCause] ([disabilityCauseName]) VALUES (@disabilityCauseName);
SELECT disabilityCauseId, disabilityCauseName FROM DisabilityCause WHERE (disabilityCauseId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@disabilityCauseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityCauseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT disabilityCauseId, disabilityCauseName FROM dbo.DisabilityCause</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DisabilityCause] SET [disabilityCauseName] = @disabilityCauseName WHERE (([disabilityCauseId] = @Original_disabilityCauseId) AND ([disabilityCauseName] = @Original_disabilityCauseName));
SELECT disabilityCauseId, disabilityCauseName FROM DisabilityCause WHERE (disabilityCauseId = @disabilityCauseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@disabilityCauseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityCauseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disabilityCauseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disabilityCauseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_disabilityCauseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityCauseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="disabilityCauseId" ColumnName="disabilityCauseId" DataSourceName="Lasoda.dbo.DisabilityCause" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@disabilityCauseId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="disabilityCauseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="disabilityCauseId" DataSetColumn="disabilityCauseId" />
              <Mapping SourceColumn="disabilityCauseName" DataSetColumn="disabilityCauseName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisabilitySeverityTableAdapter" GeneratorDataComponentClassName="DisabilitySeverityTableAdapter" Name="DisabilitySeverity" UserDataComponentName="DisabilitySeverityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.DisabilitySeverity" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DisabilitySeverity] WHERE (([disabilitySeverityId] = @Original_disabilitySeverityId) AND ([severityName] = @Original_severityName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disabilitySeverityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disabilitySeverityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_severityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="severityName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DisabilitySeverity] ([severityName]) VALUES (@severityName);
SELECT disabilitySeverityId, severityName FROM DisabilitySeverity WHERE (disabilitySeverityId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@severityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="severityName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT disabilitySeverityId, severityName FROM dbo.DisabilitySeverity</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DisabilitySeverity] SET [severityName] = @severityName WHERE (([disabilitySeverityId] = @Original_disabilitySeverityId) AND ([severityName] = @Original_severityName));
SELECT disabilitySeverityId, severityName FROM DisabilitySeverity WHERE (disabilitySeverityId = @disabilitySeverityId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@severityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="severityName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disabilitySeverityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disabilitySeverityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_severityName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="severityName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="disabilitySeverityId" ColumnName="disabilitySeverityId" DataSourceName="Lasoda.dbo.DisabilitySeverity" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@disabilitySeverityId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="disabilitySeverityId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="disabilitySeverityId" DataSetColumn="disabilitySeverityId" />
              <Mapping SourceColumn="severityName" DataSetColumn="severityName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisabilityTypeTableAdapter" GeneratorDataComponentClassName="DisabilityTypeTableAdapter" Name="DisabilityType" UserDataComponentName="DisabilityTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.DisabilityType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DisabilityType] WHERE (([disabilityTypeId] = @Original_disabilityTypeId) AND ([disabilityTypeName] = @Original_disabilityTypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disabilityTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disabilityTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_disabilityTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DisabilityType] ([disabilityTypeName]) VALUES (@disabilityTypeName);
SELECT disabilityTypeId, disabilityTypeName FROM DisabilityType WHERE (disabilityTypeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@disabilityTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT disabilityTypeId, disabilityTypeName FROM dbo.DisabilityType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DisabilityType] SET [disabilityTypeName] = @disabilityTypeName WHERE (([disabilityTypeId] = @Original_disabilityTypeId) AND ([disabilityTypeName] = @Original_disabilityTypeName));
SELECT disabilityTypeId, disabilityTypeName FROM DisabilityType WHERE (disabilityTypeId = @disabilityTypeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@disabilityTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disabilityTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disabilityTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_disabilityTypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="disabilityTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="disabilityTypeId" ColumnName="disabilityTypeId" DataSourceName="Lasoda.dbo.DisabilityType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@disabilityTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="disabilityTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="disabilityTypeId" DataSetColumn="disabilityTypeId" />
              <Mapping SourceColumn="disabilityTypeName" DataSetColumn="disabilityTypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HearingImpairmentTableAdapter" GeneratorDataComponentClassName="HearingImpairmentTableAdapter" Name="HearingImpairment" UserDataComponentName="HearingImpairmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.HearingImpairment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[HearingImpairment] WHERE (([hearingImpairmentId] = @Original_hearingImpairmentId) AND ([hearingImpairmentDescription] = @Original_hearingImpairmentDescription))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_hearingImpairmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="hearingImpairmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_hearingImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hearingImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[HearingImpairment] ([hearingImpairmentDescription]) VALUES (@hearingImpairmentDescription);
SELECT hearingImpairmentId, hearingImpairmentDescription FROM HearingImpairment WHERE (hearingImpairmentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@hearingImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hearingImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT hearingImpairmentId, hearingImpairmentDescription FROM dbo.HearingImpairment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[HearingImpairment] SET [hearingImpairmentDescription] = @hearingImpairmentDescription WHERE (([hearingImpairmentId] = @Original_hearingImpairmentId) AND ([hearingImpairmentDescription] = @Original_hearingImpairmentDescription));
SELECT hearingImpairmentId, hearingImpairmentDescription FROM HearingImpairment WHERE (hearingImpairmentId = @hearingImpairmentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@hearingImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hearingImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_hearingImpairmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="hearingImpairmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_hearingImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="hearingImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="hearingImpairmentId" ColumnName="hearingImpairmentId" DataSourceName="Lasoda.dbo.HearingImpairment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@hearingImpairmentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="hearingImpairmentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="hearingImpairmentId" DataSetColumn="hearingImpairmentId" />
              <Mapping SourceColumn="hearingImpairmentDescription" DataSetColumn="hearingImpairmentDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ImpairmentDurationTableAdapter" GeneratorDataComponentClassName="ImpairmentDurationTableAdapter" Name="ImpairmentDuration" UserDataComponentName="ImpairmentDurationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.ImpairmentDuration" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ImpairmentDuration] WHERE (([impairmentDurationId] = @Original_impairmentDurationId) AND ([duration] = @Original_duration))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_impairmentDurationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="impairmentDurationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_duration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="duration" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ImpairmentDuration] ([duration]) VALUES (@duration);
SELECT impairmentDurationId, duration FROM ImpairmentDuration WHERE (impairmentDurationId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@duration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="duration" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT impairmentDurationId, duration FROM dbo.ImpairmentDuration</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ImpairmentDuration] SET [duration] = @duration WHERE (([impairmentDurationId] = @Original_impairmentDurationId) AND ([duration] = @Original_duration));
SELECT impairmentDurationId, duration FROM ImpairmentDuration WHERE (impairmentDurationId = @impairmentDurationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@duration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="duration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_impairmentDurationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="impairmentDurationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_duration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="duration" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="impairmentDurationId" ColumnName="impairmentDurationId" DataSourceName="Lasoda.dbo.ImpairmentDuration" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@impairmentDurationId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="impairmentDurationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="impairmentDurationId" DataSetColumn="impairmentDurationId" />
              <Mapping SourceColumn="duration" DataSetColumn="duration" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OnsetOfDisabilityTableAdapter" GeneratorDataComponentClassName="OnsetOfDisabilityTableAdapter" Name="OnsetOfDisability" UserDataComponentName="OnsetOfDisabilityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.OnsetOfDisability" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OnsetOfDisability] WHERE (([onsetId] = @Original_onsetId) AND ([onsetDuration] = @Original_onsetDuration))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_onsetId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="onsetId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_onsetDuration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="onsetDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OnsetOfDisability] ([onsetDuration]) VALUES (@onsetDuration);
SELECT onsetId, onsetDuration FROM OnsetOfDisability WHERE (onsetId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@onsetDuration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="onsetDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT onsetId, onsetDuration FROM dbo.OnsetOfDisability</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OnsetOfDisability] SET [onsetDuration] = @onsetDuration WHERE (([onsetId] = @Original_onsetId) AND ([onsetDuration] = @Original_onsetDuration));
SELECT onsetId, onsetDuration FROM OnsetOfDisability WHERE (onsetId = @onsetId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@onsetDuration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="onsetDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_onsetId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="onsetId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_onsetDuration" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="onsetDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="onsetId" ColumnName="onsetId" DataSourceName="Lasoda.dbo.OnsetOfDisability" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@onsetId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="onsetId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="onsetId" DataSetColumn="onsetId" />
              <Mapping SourceColumn="onsetDuration" DataSetColumn="onsetDuration" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VisualImpairmentTableAdapter" GeneratorDataComponentClassName="VisualImpairmentTableAdapter" Name="VisualImpairment" UserDataComponentName="VisualImpairmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Setting (Settings)" DbObjectName="Lasoda.dbo.VisualImpairment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[VisualImpairment] WHERE (([visualImpairmentId] = @Original_visualImpairmentId) AND ([ImpairmentDescription] = @Original_ImpairmentDescription))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_visualImpairmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="visualImpairmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[VisualImpairment] ([ImpairmentDescription]) VALUES (@ImpairmentDescription);
SELECT visualImpairmentId, ImpairmentDescription FROM VisualImpairment WHERE (visualImpairmentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT visualImpairmentId, ImpairmentDescription FROM dbo.VisualImpairment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[VisualImpairment] SET [ImpairmentDescription] = @ImpairmentDescription WHERE (([visualImpairmentId] = @Original_visualImpairmentId) AND ([ImpairmentDescription] = @Original_ImpairmentDescription));
SELECT visualImpairmentId, ImpairmentDescription FROM VisualImpairment WHERE (visualImpairmentId = @visualImpairmentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_visualImpairmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="visualImpairmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ImpairmentDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ImpairmentDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="visualImpairmentId" ColumnName="visualImpairmentId" DataSourceName="Lasoda.dbo.VisualImpairment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@visualImpairmentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="visualImpairmentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="visualImpairmentId" DataSetColumn="visualImpairmentId" />
              <Mapping SourceColumn="ImpairmentDescription" DataSetColumn="ImpairmentDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LasodaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="LasodaDataSet" msprop:Generator_UserDSName="LasodaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="AffectedBodyPart" msprop:Generator_TableClassName="AffectedBodyPartDataTable" msprop:Generator_TableVarName="tableAffectedBodyPart" msprop:Generator_RowChangedName="AffectedBodyPartRowChanged" msprop:Generator_TablePropName="AffectedBodyPart" msprop:Generator_RowDeletingName="AffectedBodyPartRowDeleting" msprop:Generator_RowChangingName="AffectedBodyPartRowChanging" msprop:Generator_RowEvHandlerName="AffectedBodyPartRowChangeEventHandler" msprop:Generator_RowDeletedName="AffectedBodyPartRowDeleted" msprop:Generator_RowClassName="AffectedBodyPartRow" msprop:Generator_UserTableName="AffectedBodyPart" msprop:Generator_RowEvArgName="AffectedBodyPartRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="bodypartId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnbodypartId" msprop:Generator_ColumnPropNameInRow="bodypartId" msprop:Generator_ColumnPropNameInTable="bodypartIdColumn" msprop:Generator_UserColumnName="bodypartId" type="xs:int" />
              <xs:element name="description" msprop:Generator_ColumnVarNameInTable="columndescription" msprop:Generator_ColumnPropNameInRow="description" msprop:Generator_ColumnPropNameInTable="descriptionColumn" msprop:Generator_UserColumnName="description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DisabilityCause" msprop:Generator_TableClassName="DisabilityCauseDataTable" msprop:Generator_TableVarName="tableDisabilityCause" msprop:Generator_RowChangedName="DisabilityCauseRowChanged" msprop:Generator_TablePropName="DisabilityCause" msprop:Generator_RowDeletingName="DisabilityCauseRowDeleting" msprop:Generator_RowChangingName="DisabilityCauseRowChanging" msprop:Generator_RowEvHandlerName="DisabilityCauseRowChangeEventHandler" msprop:Generator_RowDeletedName="DisabilityCauseRowDeleted" msprop:Generator_RowClassName="DisabilityCauseRow" msprop:Generator_UserTableName="DisabilityCause" msprop:Generator_RowEvArgName="DisabilityCauseRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="disabilityCauseId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndisabilityCauseId" msprop:Generator_ColumnPropNameInRow="disabilityCauseId" msprop:Generator_ColumnPropNameInTable="disabilityCauseIdColumn" msprop:Generator_UserColumnName="disabilityCauseId" type="xs:int" />
              <xs:element name="disabilityCauseName" msprop:Generator_ColumnVarNameInTable="columndisabilityCauseName" msprop:Generator_ColumnPropNameInRow="disabilityCauseName" msprop:Generator_ColumnPropNameInTable="disabilityCauseNameColumn" msprop:Generator_UserColumnName="disabilityCauseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DisabilitySeverity" msprop:Generator_TableClassName="DisabilitySeverityDataTable" msprop:Generator_TableVarName="tableDisabilitySeverity" msprop:Generator_RowChangedName="DisabilitySeverityRowChanged" msprop:Generator_TablePropName="DisabilitySeverity" msprop:Generator_RowDeletingName="DisabilitySeverityRowDeleting" msprop:Generator_RowChangingName="DisabilitySeverityRowChanging" msprop:Generator_RowEvHandlerName="DisabilitySeverityRowChangeEventHandler" msprop:Generator_RowDeletedName="DisabilitySeverityRowDeleted" msprop:Generator_RowClassName="DisabilitySeverityRow" msprop:Generator_UserTableName="DisabilitySeverity" msprop:Generator_RowEvArgName="DisabilitySeverityRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="disabilitySeverityId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndisabilitySeverityId" msprop:Generator_ColumnPropNameInRow="disabilitySeverityId" msprop:Generator_ColumnPropNameInTable="disabilitySeverityIdColumn" msprop:Generator_UserColumnName="disabilitySeverityId" type="xs:int" />
              <xs:element name="severityName" msprop:Generator_ColumnVarNameInTable="columnseverityName" msprop:Generator_ColumnPropNameInRow="severityName" msprop:Generator_ColumnPropNameInTable="severityNameColumn" msprop:Generator_UserColumnName="severityName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DisabilityType" msprop:Generator_TableClassName="DisabilityTypeDataTable" msprop:Generator_TableVarName="tableDisabilityType" msprop:Generator_RowChangedName="DisabilityTypeRowChanged" msprop:Generator_TablePropName="DisabilityType" msprop:Generator_RowDeletingName="DisabilityTypeRowDeleting" msprop:Generator_RowChangingName="DisabilityTypeRowChanging" msprop:Generator_RowEvHandlerName="DisabilityTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="DisabilityTypeRowDeleted" msprop:Generator_RowClassName="DisabilityTypeRow" msprop:Generator_UserTableName="DisabilityType" msprop:Generator_RowEvArgName="DisabilityTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="disabilityTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndisabilityTypeId" msprop:Generator_ColumnPropNameInRow="disabilityTypeId" msprop:Generator_ColumnPropNameInTable="disabilityTypeIdColumn" msprop:Generator_UserColumnName="disabilityTypeId" type="xs:int" />
              <xs:element name="disabilityTypeName" msprop:Generator_ColumnVarNameInTable="columndisabilityTypeName" msprop:Generator_ColumnPropNameInRow="disabilityTypeName" msprop:Generator_ColumnPropNameInTable="disabilityTypeNameColumn" msprop:Generator_UserColumnName="disabilityTypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="HearingImpairment" msprop:Generator_TableClassName="HearingImpairmentDataTable" msprop:Generator_TableVarName="tableHearingImpairment" msprop:Generator_RowChangedName="HearingImpairmentRowChanged" msprop:Generator_TablePropName="HearingImpairment" msprop:Generator_RowDeletingName="HearingImpairmentRowDeleting" msprop:Generator_RowChangingName="HearingImpairmentRowChanging" msprop:Generator_RowEvHandlerName="HearingImpairmentRowChangeEventHandler" msprop:Generator_RowDeletedName="HearingImpairmentRowDeleted" msprop:Generator_RowClassName="HearingImpairmentRow" msprop:Generator_UserTableName="HearingImpairment" msprop:Generator_RowEvArgName="HearingImpairmentRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="hearingImpairmentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnhearingImpairmentId" msprop:Generator_ColumnPropNameInRow="hearingImpairmentId" msprop:Generator_ColumnPropNameInTable="hearingImpairmentIdColumn" msprop:Generator_UserColumnName="hearingImpairmentId" type="xs:int" />
              <xs:element name="hearingImpairmentDescription" msprop:Generator_ColumnVarNameInTable="columnhearingImpairmentDescription" msprop:Generator_ColumnPropNameInRow="hearingImpairmentDescription" msprop:Generator_ColumnPropNameInTable="hearingImpairmentDescriptionColumn" msprop:Generator_UserColumnName="hearingImpairmentDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ImpairmentDuration" msprop:Generator_TableClassName="ImpairmentDurationDataTable" msprop:Generator_TableVarName="tableImpairmentDuration" msprop:Generator_RowChangedName="ImpairmentDurationRowChanged" msprop:Generator_TablePropName="ImpairmentDuration" msprop:Generator_RowDeletingName="ImpairmentDurationRowDeleting" msprop:Generator_RowChangingName="ImpairmentDurationRowChanging" msprop:Generator_RowEvHandlerName="ImpairmentDurationRowChangeEventHandler" msprop:Generator_RowDeletedName="ImpairmentDurationRowDeleted" msprop:Generator_RowClassName="ImpairmentDurationRow" msprop:Generator_UserTableName="ImpairmentDuration" msprop:Generator_RowEvArgName="ImpairmentDurationRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="impairmentDurationId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnimpairmentDurationId" msprop:Generator_ColumnPropNameInRow="impairmentDurationId" msprop:Generator_ColumnPropNameInTable="impairmentDurationIdColumn" msprop:Generator_UserColumnName="impairmentDurationId" type="xs:int" />
              <xs:element name="duration" msprop:Generator_ColumnVarNameInTable="columnduration" msprop:Generator_ColumnPropNameInRow="duration" msprop:Generator_ColumnPropNameInTable="durationColumn" msprop:Generator_UserColumnName="duration">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OnsetOfDisability" msprop:Generator_TableClassName="OnsetOfDisabilityDataTable" msprop:Generator_TableVarName="tableOnsetOfDisability" msprop:Generator_RowChangedName="OnsetOfDisabilityRowChanged" msprop:Generator_TablePropName="OnsetOfDisability" msprop:Generator_RowDeletingName="OnsetOfDisabilityRowDeleting" msprop:Generator_RowChangingName="OnsetOfDisabilityRowChanging" msprop:Generator_RowEvHandlerName="OnsetOfDisabilityRowChangeEventHandler" msprop:Generator_RowDeletedName="OnsetOfDisabilityRowDeleted" msprop:Generator_RowClassName="OnsetOfDisabilityRow" msprop:Generator_UserTableName="OnsetOfDisability" msprop:Generator_RowEvArgName="OnsetOfDisabilityRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="onsetId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnonsetId" msprop:Generator_ColumnPropNameInRow="onsetId" msprop:Generator_ColumnPropNameInTable="onsetIdColumn" msprop:Generator_UserColumnName="onsetId" type="xs:int" />
              <xs:element name="onsetDuration" msprop:Generator_ColumnVarNameInTable="columnonsetDuration" msprop:Generator_ColumnPropNameInRow="onsetDuration" msprop:Generator_ColumnPropNameInTable="onsetDurationColumn" msprop:Generator_UserColumnName="onsetDuration">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="VisualImpairment" msprop:Generator_TableClassName="VisualImpairmentDataTable" msprop:Generator_TableVarName="tableVisualImpairment" msprop:Generator_RowChangedName="VisualImpairmentRowChanged" msprop:Generator_TablePropName="VisualImpairment" msprop:Generator_RowDeletingName="VisualImpairmentRowDeleting" msprop:Generator_RowChangingName="VisualImpairmentRowChanging" msprop:Generator_RowEvHandlerName="VisualImpairmentRowChangeEventHandler" msprop:Generator_RowDeletedName="VisualImpairmentRowDeleted" msprop:Generator_RowClassName="VisualImpairmentRow" msprop:Generator_UserTableName="VisualImpairment" msprop:Generator_RowEvArgName="VisualImpairmentRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="visualImpairmentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnvisualImpairmentId" msprop:Generator_ColumnPropNameInRow="visualImpairmentId" msprop:Generator_ColumnPropNameInTable="visualImpairmentIdColumn" msprop:Generator_UserColumnName="visualImpairmentId" type="xs:int" />
              <xs:element name="ImpairmentDescription" msprop:Generator_ColumnVarNameInTable="columnImpairmentDescription" msprop:Generator_ColumnPropNameInRow="ImpairmentDescription" msprop:Generator_ColumnPropNameInTable="ImpairmentDescriptionColumn" msprop:Generator_UserColumnName="ImpairmentDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AffectedBodyPart" />
      <xs:field xpath="mstns:bodypartId" />
    </xs:unique>
    <xs:unique name="DisabilityCause_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DisabilityCause" />
      <xs:field xpath="mstns:disabilityCauseId" />
    </xs:unique>
    <xs:unique name="DisabilitySeverity_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DisabilitySeverity" />
      <xs:field xpath="mstns:disabilitySeverityId" />
    </xs:unique>
    <xs:unique name="DisabilityType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DisabilityType" />
      <xs:field xpath="mstns:disabilityTypeId" />
    </xs:unique>
    <xs:unique name="HearingImpairment_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:HearingImpairment" />
      <xs:field xpath="mstns:hearingImpairmentId" />
    </xs:unique>
    <xs:unique name="ImpairmentDuration_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ImpairmentDuration" />
      <xs:field xpath="mstns:impairmentDurationId" />
    </xs:unique>
    <xs:unique name="OnsetOfDisability_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OnsetOfDisability" />
      <xs:field xpath="mstns:onsetId" />
    </xs:unique>
    <xs:unique name="VisualImpairment_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:VisualImpairment" />
      <xs:field xpath="mstns:visualImpairmentId" />
    </xs:unique>
  </xs:element>
</xs:schema>